import "@cadl-lang/rest";

@serviceTitle("DPGClient")
@serviceVersion("1.0.0")
@server("http://localhost:3000", "Testserver endpoint")
@doc("DPG Swagger, this is the initial swagger a service could do")
@Cadl.Rest.produces("application/json")
@Cadl.Rest.consumes("application/json")
namespace Cadl.Testserver;
using Cadl.Http;

model PostInput {
  url: string;
}

model Message {
  message: string;
}

@doc("Answer from service")
model MessageResponse {
  @statusCode statusCode: 200;
  @body body: Message;
}

@route("/serviceDriven")
interface params {
  @route("/parameters")
  @doc("Head request, no params.\n Initially has no query parameters. After evolution, a new optional query parameter is added")
  @head
  headNoParams(): {@statusCode statusCode: 200;};

  @route("/parameters")
  @doc("Get true Boolean value on path.\n Initially only has one required Query Parameter. After evolution, a new optional query parameter is added")
  @get
  getRequired(
    @doc("I am a required parameter")
    @query
    parameter: string
  ): MessageResponse;

  @route("/parameters")
  @doc("Initially has one required query parameter and one optional query parameter.  After evolution, a new optional query parameter is added")
  @put
  putRequiredOptional(
    @doc("I am a required parameter")
    @query
    requiredParam: string,

    @doc("I am an optional parameter")
    @query
    optionalParam?: string
  ): MessageResponse;

  @route("/parameters")
  @doc("POST a JSON")
  @post
  postParameters(
    @doc("I am a body parameter. My only valid JSON entry is { url: \"http://example.org/myimage.jpeg\" }")
    @body
    parameter: PostInput
  ): MessageResponse;

  @route("/moreParameters")
  @doc("Get true Boolean value on path.\n Initially has one optional query parameter. After evolution, a new optional query parameter is added")
  @get
  getOptional(
    @doc("I am an optional parameter")
    @query
    optionalParam?: string
  ): MessageResponse;
}
