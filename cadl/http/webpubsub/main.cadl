import "@cadl-lang/rest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-autorest";

using Cadl.Http;
using Cadl.Rest;

//
// ** Service description **
//

@serviceTitle("WebPubSub Service")
@serviceVersion("2021-10-01")
// TODO: Use `Uri` type when available: https://github.com/microsoft/cadl/issues/654
// TODO: Emit "format": "url" so .NET client will generate Uri type in client constructor: https://github.com/microsoft/cadl/issues/659
@server("{Endpoint}", "WebPubSub Service", {Endpoint: string})
@produces("text/plain", "application/json", "text/json")
namespace WebPubSubService;

//
// ** Model definitions
//

enum WebPubSubPermission
{
    sendToGroup,
    joinLeaveGroup
}

@error
model ErrorDetail {
    code: string;
    message: string;
    target: string;
    // TODO: details
    // TODO: inner
}

//
// ** Input parameter definitions **
//

model CommonParams
{
    // TODO: Why does `summary` cause a schema violation in .NET DPG generator?
    //@summary("Target hub name, which should start with alphabetic characters and only contain alpha-numeric characters or underscore.")

    // Note: assuming this is a server-side validation that is ignored by client.
    @pattern("^[A-Za-z][A-Za-z0-9_`,.[\\]]{0,127}$")
    // TODO: How can we make `hub` a parameter on the client constructor?
    //   This would need us to designate it as a "global" or "client parameter": https://github.com/microsoft/cadl/issues/664
    // @extension("x-ms-parameter-location", "client")
    @path hub: string,

    // TODO: by grouping this with `hub`, we make the assumption that the order of
    //  `api-version` in the query parameters doesn't matter.  I've confirmed this with the API stewardship board.
    //@summary("The version of the REST APIs.")
    @query "api-version": string
}

model ConnectionId
{
    //@summary("Target connection Id")
    // Note: assuming this is a server-side validation that is ignored by client.
    @minLength(1)
    @path connectionId: string
}

model GroupId
{
    //@summary("Target group name, which length should be greater than 0 and less than 1025.")
    // Note: assuming these are server-side validations that are ignored by client.
    @maxLength(1024)
    @minLength(1)
    @path group: string,
}

model ConnectionParams
{
    ...CommonParams,
    ...ConnectionId
}

model GroupParams
{
    ...CommonParams,
    ...GroupId
}

model UserParams
{
    ...CommonParams,

    @minLength(1)
    @path userId: string
}

@route("/api/hubs/{hub}")
namespace WebPubSubService {

    //
    // ** Group routes **
    //

    @route("/groups/{group}/connections/{connectionId}")
    @tag("webpubsub")
    @summary("Add a connection to the target group.")
    // TODO: As x-ms-error-response and x-ms-error-code header
    @put
    op addConnectionToGroup(...GroupParams, ...ConnectionId):
        // TODO: Use untemplated OkResponse: https://github.com/microsoft/cadl/issues/666
        Response<200> |
        ErrorDetail;

    // TODO: is there a way to not duplicate routes, when multiple operations apply to these? (Without introducing namespace/client boundaries?)
    @route("/groups/{group}/connections/{connectionId}")
    @tag("webpubsub")
    @summary( "Remove a connection from the target group.")
    @delete
    op removeConnectionFromGroup(...GroupParams, ...ConnectionId):
        NoContentResponse |
        ErrorDetail;

    //
    // ** User routes **
    //

    @route("/users/{userId}/groups/{group}")
    @tag("webpubsub")
    @summary("Add a user to the target group.")
    @put
    // TODO: Use untemplated OkResponse: https://github.com/microsoft/cadl/issues/666
    op addUserToGroup(...UserParams, ...GroupId):
        Response<200> |
        ErrorDetail;

    @route("/users/{userId}/groups/{group}")
    @delete
    @summary("Remove a user from the target group.")
    op removeUserFromGroup(...UserParams, ...GroupId):
        Response<200> |
        ErrorDetail;

    //
    // ** Permission routes **
    //

    @route("/permissions/{permission}/connections/{connectionId}")
    @tag("webpubsub")
    @summary("Check if a connection has permission to the specified action.")
    // Note: Not generating as Response<bool> from .NET DPG generator, because it's manually added in .NET customization layer.
    @head
    op checkPermission(...CommonParams, @path permission: WebPubSubPermission, @path connectionId: string, @query targetName?: string):
        Response<200> |
        NotFoundResponse |
        ErrorDetail;

    //
    // ** Action routes **
    //

    @route("/:send")
    @tag("webpubsub")
    @summary("Broadcast content inside request body to all the connected client connections.")
    // TODO: Add consumes - need contentType param
    //   It is not currently possible in Cadl to specify @consumes at the operation level.
    //   Tracking with https://github.com/microsoft/cadl/issues/665
    //@consumes("application/octet-stream", "text/plain", "application/json")
    @post
    op sendToAll(...CommonParams, @query excluded?: string[], @body message: bytes):
        AcceptedResponse |
        ErrorDetail;
}
