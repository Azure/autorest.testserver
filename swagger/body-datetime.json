{
  "swagger": "2.0",
  "info": {
    "title": "AutoRest DateTime Test Service",
    "description": "Test Infrastructure for AutoRest",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/datetime/null": {
      "get": {
        "operationId": "datetime_getNull",
        "description": "Get null datetime value",
        "responses": {
          "200": {
            "description": "The null datetime value",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/invalid": {
      "get": {
        "operationId": "datetime_getInvalid",
        "description": "Get invalid datetime value",
        "responses": {
          "200": {
            "description": "The invalid datetime value",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/overflow": {
      "get": {
        "operationId": "datetime_getOverflow",
        "description": "Get overflow datetime value",
        "responses": {
          "200": {
            "description": "The overflow datetime value",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/underflow": {
      "get": {
        "operationId": "datetime_getUnderflow",
        "description": "Get underflow datetime value",
        "responses": {
          "200": {
            "description": "The underflow datetime value",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/utc": {
      "put": {
        "operationId": "datetime_putUtcMaxDateTime",
        "description": "Put max datetime value 9999-12-31T23:59:59.999Z",
        "parameters": [
          {
            "name": "datetimeBody",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31T23:59:59.999Z"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/utc7ms": {
      "put": {
        "operationId": "datetime_putUtcMaxDateTime7Digits",
        "description": "Put max datetime value 9999-12-31T23:59:59.9999999Z",
        "summary": "This is against the recommendation that asks for 3 digits, but allow to test what happens in that scenario",
        "parameters": [
          {
            "name": "datetimeBody",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31T23:59:59.9999999Z"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/utc/lowercase": {
      "get": {
        "operationId": "datetime_getUtcLowercaseMaxDateTime",
        "description": "Get max datetime value 9999-12-31t23:59:59.999z",
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31t23:59:59.999z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/utc/uppercase": {
      "get": {
        "operationId": "datetime_getUtcUppercaseMaxDateTime",
        "description": "Get max datetime value 9999-12-31T23:59:59.999Z",
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31T23:59:59.999Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/utc7ms/uppercase": {
      "get": {
        "operationId": "datetime_getUtcUppercaseMaxDateTime7Digits",
        "description": "Get max datetime value 9999-12-31T23:59:59.9999999Z",
        "summary": "This is against the recommendation that asks for 3 digits, but allow to test what happens in that scenario",
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31T23:59:59.9999999Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/localpositiveoffset": {
      "put": {
        "operationId": "datetime_putLocalPositiveOffsetMaxDateTime",
        "description": "Put max datetime value with positive numoffset 9999-12-31t23:59:59.999+14:00",
        "parameters": [
          {
            "name": "datetimeBody",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The max datetime value with positive num offset 9999-12-31T23:59:59.999+14:00"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/localpositiveoffset/lowercase": {
      "get": {
        "operationId": "datetime_getLocalPositiveOffsetLowercaseMaxDateTime",
        "description": "Get max datetime value with positive num offset 9999-12-31t23:59:59.999+14:00",
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31t23:59:59.999+14:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/localpositiveoffset/uppercase": {
      "get": {
        "operationId": "datetime_getLocalPositiveOffsetUppercaseMaxDateTime",
        "description": "Get max datetime value with positive num offset 9999-12-31T23:59:59.999+14:00",
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31T23:59:59.999+14:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/localnegativeoffset": {
      "put": {
        "operationId": "datetime_putLocalNegativeOffsetMaxDateTime",
        "description": "Put max datetime value with positive numoffset 9999-12-31t23:59:59.999-14:00",
        "parameters": [
          {
            "name": "datetimeBody",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The max datetime value with positive num offset 9999-12-31T23:59:59.999+14:00"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/localnegativeoffset/uppercase": {
      "get": {
        "operationId": "datetime_getLocalNegativeOffsetUppercaseMaxDateTime",
        "description": "Get max datetime value with positive num offset 9999-12-31T23:59:59.999-14:00",
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31T23:59:59.999-14:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/max/localnegativeoffset/lowercase": {
      "get": {
        "operationId": "datetime_getLocalNegativeOffsetLowercaseMaxDateTime",
        "description": "Get max datetime value with positive num offset 9999-12-31t23:59:59.999-14:00",
        "responses": {
          "200": {
            "description": "The max datetime value 9999-12-31t23:59:59.999-14:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/min/utc": {
      "put": {
        "operationId": "datetime_putUtcMinDateTime",
        "description": "Put min datetime value 0001-01-01T00:00:00Z",
        "parameters": [
          {
            "name": "datetimeBody",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The min datetime value 0001-01-01T00:00:00Z"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "datetime_getUtcMinDateTime",
        "description": "Get min datetime value 0001-01-01T00:00:00Z",
        "responses": {
          "200": {
            "description": "The min datetime value 0001-01-01T00:00:00Z",
            "schema": {
              "type": "string",
              "format": "date-time",
              "enum": [
                "0001-01-01T00:00:00Z"
              ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/min/localpositiveoffset": {
      "put": {
        "operationId": "datetime_putLocalPositiveOffsetMinDateTime",
        "description": "Put min datetime value 0001-01-01T00:00:00+14:00",
        "parameters": [
          {
            "name": "datetimeBody",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The min datetime value 0001-01-01T00:00:00+14:00"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "datetime_getLocalPositiveOffsetMinDateTime",
        "description": "Get min datetime value 0001-01-01T00:00:00+14:00",
        "responses": {
          "200": {
            "description": "The min datetime value 0001-01-01T00:00:00+14:00",
            "schema": {
              "type": "string",
              "format": "date-time",
              "enum": [
                "0001-01-01t00:00:00+14:00"
              ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/min/localnegativeoffset": {
      "put": {
        "operationId": "datetime_putLocalNegativeOffsetMinDateTime",
        "description": "Put min datetime value 0001-01-01T00:00:00-14:00",
        "parameters": [
          {
            "name": "datetimeBody",
            "in": "body",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The min datetime value 0001-01-01T00:00:00+14:00"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "operationId": "datetime_getLocalNegativeOffsetMinDateTime",
        "description": "Get min datetime value 0001-01-01T00:00:00-14:00",
        "responses": {
          "200": {
            "description": "The min datetime value 0001-01-01T00:00:00+14:00",
            "schema": {
              "type": "string",
              "format": "date-time",
              "enum": [
                "0001-01-01t00:00:00+14:00"
              ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datetime/min/localnooffset": {
      "get": {
        "operationId": "datetime_getLocalNoOffsetMinDateTime",
        "description": "Get min datetime value 0001-01-01T00:00:00",
        "responses": {
          "200": {
            "description": "The min datetime value 0001-01-01T00:00:00",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type":  "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}